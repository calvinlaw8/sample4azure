name: Deploy to Azure Kubernetes Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY: calvintestaksregistry.azurecr.io
  IMAGE_REPOSITORY: calvinlawpipelinesjavascriptdocker
  K8S_NAMESPACE_FOR_PR: review-app-${{ github.event.pull_request.number }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ github.run_id }} .
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ github.run_id }}

      - name: Upload manifests
        uses: actions/upload-artifact@v3
        with:
          name: manifests
          path: manifests/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests
          path: manifests/

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to AKS
        uses: azure/k8s-deploy@v1
        with:
          namespace: default
          manifests: |
            manifests/deployment.yml
            manifests/service.yml
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ github.run_id }}
          imagepullsecrets: |
            calvintestaksregistryf362-auth

  deploy-pull-request:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests
          path: manifests/

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create namespace for PR
        run: |
          kubectl create namespace ${{ env.K8S_NAMESPACE_FOR_PR }}

      - name: Deploy to AKS for PR
        uses: azure/k8s-deploy@v1
        with:
          namespace: ${{ env.K8S_NAMESPACE_FOR_PR }}
          manifests: |
            manifests/deployment.yml
            manifests/service.yml
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ github.run_id }}
          imagepullsecrets: |
            calvintestaksregistryf362-auth

      - name: Get service URL
        id: get-service-url
        run: |
          url=$(kubectl get svc -n ${{ env.K8S_NAMESPACE_FOR_PR }} -o jsonpath='http://{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}')
          echo "Service URL: $url"
          echo "::set-output name=url::$url"

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const message = `Your review app has been deployed and is available at ${{ steps.get-service-url.outputs.url }}.\n\n[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app.`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
